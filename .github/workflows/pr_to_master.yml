name: pr_to_main

on:
  pull_request:
    branches:
      - main
    paths:
      - 'models/**'
      - 'snapshots/**'
      - 'dbt_project.yml'
      - 'packages.yml'
      - 'requirement.txt'

env:

  DBT_PROFILES_DIR: ./
  ARTIFACT_DBT_MANIFEST_NAME: dbt_manifest
  WORKFLOW_DBT_MANIFEST: push_to_master.yml
  DBT_USER: ${{ secrets.DBT_USER }}
  DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
  DBT_SCHEMA_CI: ${{ secrets.DBT_SCHEMA_CI }}
  DBT_SCHEMA: ${{ secrets.DBT_SCHEMA }}

jobs:
  pr_to_main:
    name: pr_to_main
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@main

      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"

      - uses: actions/setup-node@v3.4.1

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
          dbt deps --target ci
      
      # remove as we no longer use Lightdash
      # - name: Install lightdash CLI
      #   run: npm install -g @lightdash/cli

      - name: Seeding
        run: dbt seed --target ci

      - name: Snapshot
        run: dbt snapshot --target ci

      - name: Check required tests
        run: |
          dbt run-operation required_tests --target ci

      - name: Lint with sqlfluff
        run: |
          git fetch origin main:main
          git diff main --name-only --diff-filter=d | egrep '^models/.*sql$$' | xargs -r sqlfluff lint

      ## Download dbt manifest uploaded in another workflow (default: push_to_master.yml).
      # This manifest file will be used to filter out delta models.
      - name: Download dbt manifest
        id: download_dbt_manifest
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          workflow: ${{ env.WORKFLOW_DBT_MANIFEST }}
          workflow_conclusion: success
          branch: main
          name: ${{ env.ARTIFACT_DBT_MANIFEST_NAME }}
          path: .
          check_artifacts:  false
        continue-on-error: true

      ## In some case, manifest file artifact cannot be downloaded.
      # Then, compile current code to create a new manifest file.
      # Note, because previous dbt state is missing, all models will be
      # run and tested.
      - name: Create new Dbt manifest if cannot download
        if: steps.download_dbt_manifest.outcome == 'failure'
        run: |
          dbt compile
          cp target/manifest.json .
            
      ## Run delta models
      - name: Run models
        id: run_dbt
        run: dbt run --target ci -m state:modified+ --state .

      ## Test delta models
      - name: Test models
        run: dbt test --target ci -m state:modified+ --state .

      # remove as we no longer use Lightdash
      # - name: Lightdash CLI start preview
      #   env:
      #     LIGHTDASH_API_KEY: ${{ secrets.LIGHTDASH_API_KEY }}          
      #     LIGHTDASH_PROJECT: ${{ secrets.LIGHTDASH_PROJECT }}          
      #     LIGHTDASH_URL: ${{ secrets.LIGHTDASH_URL }}          

      #   run:  lightdash start-preview --project-dir . --profiles-dir . --name ${GITHUB_HEAD_REF}
