name: push_to_master

on:
  push:
    branches:
      - main

env:
  DBT_PROFILES_DIR: ./

  DBT_USER: ${{ secrets.DBT_USER }}
  DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
  DBT_SCHEMA_PROD: ${{ secrets.DBT_SCHEMA_PROD }} 
  DBT_SCHEMA: ${{ secrets.DBT_SCHEMA }}

  ## Environment variables for running Dbt on Google BigQuery
  # DBT_GOOGLE_PROJECT_PROD: google-project-id
  # DBT_GOOGLE_KEYFILE_PATH_PROD: path/to/your/service-account-key.json
  # DBT_BIGQUERY_DATASET_PROD: bq-dataset-dev

  ## Environment variables for running Dbt on Snowflake
  # DBT_SNOWFLAKE_USER_PROD: snowflake-user-name
  # DBT_SNOWFLAKE_ROLE_PROD: snowflake-role
  # DBT_SNOWFLAKE_DATABASE_PROD: snowflake-database
  # DBT_SNOWFLAKE_WAREHOUSE_PROD: snowflake-warehouse
  # DBT_SNOWFLAKE_SCHEMA_PROD: snowflake-schema
  # DBT_SNOWFLAKE_PRIVATE_KEY_PATH_PROD: path/to/your/snowflake-key
  # DBT_SNOWFLAKE_PRIVATE_KEY_PASSPHRASE_PROD: {{ secrets.DBT_SNOWFLAKE_PRIVATE_KEY_PASSPHRASE_PROD }}

jobs:
  push_to_master:
    name: push_to_master
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@master

      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"

      - uses: actions/setup-node@v3.4.1

      ## Dbt - Google BigQuery
      # - name: Authenticate gcloud
      #   uses: google-github-actions/setup-gcloud@v0.2.0
      #   with:
      #     service_account_key: ${{ secrets.BIGQUERY_SA_KEYFILE_PROD }}
      #     project_id: ${{ env.DBT_GOOGLE_PROJECT_PROD }}
      #
      # - name: Create Google Service Account key file from secret
      #   run: 'echo "$KEYFILE" > ${{ env.DBT_GOOGLE_KEYFILE_PATH_PROD }}'
      #   shell: bash
      #   env:
      #     KEYFILE: ${{ secrets.BIGQUERY_SA_KEYFILE_PROD }}

      ## Dbt - Snowflake
      # - name: Create Snowflake key file from secret
      #   run: 'echo "$KEYFILE" > ${{ env.DBT_SNOWFLAKE_PRIVATE_KEY_PATH_PROD }}'
      #   shell: bash
      #   env:
      #     KEYFILE: ${{ secrets.SNOWFLAKE_KEY_PROD }}

      ## Cache Pip wheel files
      - name: Cache Pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
          dbt deps --target prod
          dbt seed --target prod
          dbt snapshot --target prod
          
      # remove as we no longer use Lightdash
      # - name: Install lightdash CLI
      #   run: npm install -g @lightdash/cli

      ## Run delta models
      - name: Run models
        id: run_dbt
        run: dbt run --target prod

      ## Test delta models
      - name: Test models
        run: dbt test --target prod

      # - name: Lightdash CLI deploy 
      #   env:
      #     LIGHTDASH_API_KEY: ${{ secrets.LIGHTDASH_API_KEY }}          
      #     LIGHTDASH_PROJECT: ${{ secrets.LIGHTDASH_PROJECT }}          
      #     LIGHTDASH_URL: ${{ secrets.LIGHTDASH_URL }}          

      #   run: lightdash deploy --project-dir . --profiles-dir .