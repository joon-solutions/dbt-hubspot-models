version: 2

models:
  - name: base__zendesk__ticket
    description: >
      Tickets are the means through which your end users (customers) communicate with agents in Zendesk Support. Tickets can 
      originate from a number of channels, including email, Help Center, chat, phone call, Twitter, Facebook, or the API.
    columns:
      - name: ticket_id
        description: PK of the table, automatically assigned when the ticket is created
        tests:
            - unique
            - not_null
            - dbt_utils.at_least_one
      - name: url
        description: The API url of this ticket
      - name: assignee_id
        description: The agent currently assigned to the ticket
        tests:
          - relationships:
              to: ref('base__zendesk__user')
              field: user_id
              config:
                severity: warn
      - name: brand_id
        description: Enterprise only. The id of the brand this ticket is associated with
        tests:
          - relationships:
              to: ref('base__zendesk__brand')
              field: brand_id
              config:
                severity: warn
      - name: created_at
        description: When this record was created
      - name: type
        description: The type of this ticket, possible values are problem, incident, question or task
      - name: subject
        description: The value of the subject field for this ticket
      - name: description
        description: Read-only first comment on the ticket
      - name: priority
        description: The urgency with which the ticket should be addressed, possible values are urgent, high, normal and low
      - name: status
        description: The state of the ticket, possible values are new, open, pending, hold, solved and closed
        tests:
          - accepted_values:
              values: ['new', 'open', 'pending', 'hold', 'closed', 'solved', 'deleted']
              config:
                severity: warn
      - name: recipient
        description: The original recipient e-mail address of the ticket
      - name: requester_id
        description: The user who requested this ticket
        tests:
          - relationships:
              to: ref('base__zendesk__user')
              field: user_id
              config:
                severity: warn
      - name: submitter_id
        description: The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket
        tests:
          - relationships:
              to: ref('base__zendesk__user')
              field: user_id
              config:
                severity: warn
      - name: organization_id
        description: The organization of the requester
        tests:
          - relationships:
              to: ref('base__zendesk__organization')
              field: organization_id
              config:
                severity: warn
      - name: group_id
        description: The group this ticket is assigned to
        tests:
          - relationships:
              to: ref('base__zendesk__group')
              field: group_id
              config:
                severity: warn
      - name: due_at
        description: If this is a ticket of type "task" it has a due date. Due date format uses ISO 8601 format.
      - name: ticket_form_id
        description: Enterprise only. The id of the ticket form to render for the ticket
        tests:
          - relationships:
              to: ref('base__zendesk__ticket_form_history')
              field: ticket_form_id
              config:
                severity: warn
      - name: is_public
        description: Is true if any comments are public, false otherwise
      - name: updated_at
        description: When this record last got updated
      - name: created_channel
        description: The channel the ticket was created from
      - name: source_from_id
        description: The channel the ticket was created from 
      - name: source_from_title
        description: The channel the ticket was created from
      - name: source_rel
        description: The rel the ticket was created from 
      - name: source_to_address
        description: The address of the source the ticket was created from
      - name: source_to_name
        description: The name of the source the ticket was created from  

  - name: base__zendesk__brand
    description: >
      Brands are your customer-facing identities. They might represent multiple products or services, or they 
      might literally be multiple brands owned and represented by your company.
    columns:
      - name: brand_id
        description: PK of the table, automatically assigned when the brand is created
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: brand_url
        description: The url of the brand
      - name: brand_name
        description: The name of the brand
      - name: subdomain
        description: The subdomain of the brand
      - name: is_active
        description: If the brand is set as active

  - name: base__zendesk__domain_name
    description: Domain names associated with an organization. An organization may have multiple domain names.
    columns:
      - name: unique_id
        description: PK of the table, which is the combination of organization_id and index
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: organization_id
        description: Reference to the organization
        tests:
          - not_null
          - relationships:
              to: ref('base__zendesk__organization')
              field: organization_id
              config:
                severity: warn
      - name: domain_name
        description: The name of the domain associated with the organization
      - name: index
        description: Index number of the domain name associated with the organization

  - name: base__zendesk__group
    description: >
      When support requests arrive in Zendesk Support, they can be assigned to a Group. Groups serve as the core
      element of ticket workflow; support agents are organized into Groups and tickets can be assigned to a Group
      only, or to an assigned agent within a Group. A ticket can never be assigned to an agent without also being 
      assigned to a Group.
    columns:
      - name: group_id
        description: PK of the table, automatically assigned when creating groups
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: group_name
        description: The name of the group

  - name: base__zendesk__organization_tag
    description: The tags associated with an organization. An organization may have multiple tags.
    columns:
      - name: unique_id
        description: PK of the table, which is the combination of organization_id and tag
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: organization_id
        description: Reference to the organization
      - name: tags
        description: Tag associated with the organization

  - name: base__zendesk__organization
    description: >
      Just as agents can be segmented into groups in Zendesk Support, your customers (end-users) can be segmented into 
      organizations. You can manually assign customers to an organization or automatically assign them to an organization 
      by their email address domain. Organizations can be used in business rules to route tickets to groups of agents or 
      to send email notifications.
    columns:
      - name: organization_id
        description: PK of the table, automatically assigned when the organization is created
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: organization_name
        description: A unique name for the organization
      - name: details
        description: Any details obout the organization, such as the address

  - name: base__zendesk__ticket_comment
    description: Ticket comments represent the conversation between requesters, collaborators, and agents. Comments can be public or private.
    columns:
      - name: ticket_comment_id
        description: PK of the table, automatically assigned when the comment is created
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: body
        description: The comment string
      - name: created_at
        description: The time the comment was created
      - name: is_public
        description: Boolean field indicating if the comment is public (true), or if it is an internal note (false)
      - name: ticket_id
        description: The ticket id associated with this comment
        tests:
          - relationships:
              to: ref('base__zendesk__ticket')
              field: ticket_id
              config:
                severity: warn
      - name: user_id
        description: The id of the comment author
        tests:
          - relationships:
              to: ref('base__zendesk__user')
              field: user_id
              config:
                severity: warn
      - name: is_facebook_comment
        description: Boolean field indicating if the comment is a facebook comment
      - name: is_tweet
        description: Boolean field indicating if the comment is a twitter tweet
      - name: is_voice_comment
        description: Boolean field indicating if the comment is a voice comment

  - name: base__zendesk__user_tag
    description: Table containing all tags associated with a user. Only present if your account has user tagging enabled.
    columns:
      - name: unique_id
        description: PK of the table, which is the combination of user_id and tag
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: user_id
        description: Reference to the user
        tests:
          - relationships:
              to: ref('base__zendesk__user')
              field: user_id
              config:
                severity: warn
      - name: tags
        description: Tag associated with the user

  - name: base__zendesk__user
    description: Zendesk has three types of users, end-users (your customers), agents, and administrators.
    columns:
      - name: user_id
        description: PK of the table, automatically assigned when the user is created
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: email
        description: The user's primary email address. *Writeable on create only. On update, a secondary email is added. See Email Address
      - name: name
        description: The user's name
      - name: is_active
        description: false if the user has been deleted
      - name: created_at
        description: The time the user was created
      - name: organization_id
        description: The id of the user's organization. If the user has more than one organization memberships, the id of the user's default organization
        tests:
          - relationships:
              to: ref('base__zendesk__organization')
              field: organization_id
              config:
                severity: warn
      - name: role
        description: The user's role. Possible values are "end-user", "agent", or "admin"
      - name: time_zone
        description: The user's time zone. See Time Zone
      - name: ticket_restriction
        description: Specifies which tickets the user has access to. Possible values are organization, groups, assigned, requested and null

  # - name: base__zendesk__schedule
  #   description: The support schedules created with different business hours and holidays. 
  #   columns: 
  #     - name: schedule_id
  #       description: ID automatically assigned to the schedule upon creation
  #     - name: schedule_name
  #       description: Name of the schedule
  #     - name: created_at
  #       description: Time the schedule was created
  #     - name: start_time
  #       description: Start time of the schedule, in the schedule's time zone.
  #     - name: end_time
  #       description: End time of the schedule, in the schedule's time zone.
  #     - name: time_zone
  #       description: Timezone in which the schedule operates. 
      
  # - name: base__zendesk__ticket_schedule
  #   description: The schedules applied to tickets through a trigger.
  #   columns: 
  #     - name: ticket_id
  #       description: The ID of the ticket assigned to the schedule
  #     - name: created_at
  #       description: The time the schedule was assigned to the ticket
  #     - name: schedule_id
  #       description: The ID of the schedule applied to the ticket
  
  - name: base__zendesk__ticket_form_history
    description: Ticket forms allow an admin to define a subset of ticket fields for display to both agents and end users.
    columns:
      - name: unique_id
        description: PK of the table, which is the combination of ticket_form_id and updated_at
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: ticket_form_id
        description: PK of the table, automatically assigned when creating ticket form
      - name: created_at
        description: The time the ticket form was created
      - name: updated_at
        description: The time of the last update of the ticket form
      - name: display_name
        description: The name of the form that is displayed to an end user
      - name: is_active
        description: If the form is set as active
      - name: ticket_form_name
        description: The name of the form

  - name: base__zendesk__ticket_tag
    description: >
      Tags are words, or combinations of words, you can use to add more context to tickets. The table lists all
      tags currently associated with a ticket.
    columns:
      - name: unique_id
        description: PK of the table, which is the combination of ticket_id and tag
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: ticket_id
        description: The ID of the ticket associated with the tag
      - name: tags
        description: The tag, or word(s), associated with the ticket

  
  - name: base__zendesk__ticket_field_history
    description: All fields and field values associated with tickets.
    columns:
      - name: ticket_field_id
        description: PK of the table, which is the combination of ticket_id, field_name and updated
        tests:
          - unique
          - not_null
          - dbt_utils.at_least_one
      - name: ticket_id
        description: The ID of the ticket associated with the field
        tests:
          - relationships:
              to: ref('base__zendesk__ticket')
              field: ticket_id
              config:
                severity: warn
      - name: field_name
        description: The name of the ticket field
      - name: valid_starting_at
        description: The time the ticket field value became valid
      - name: valid_ending_at
        description: The time the ticket field value became invalidated
      - name: value
        description: The value of the field
      - name: user_id
        description: The id of the user who made the update
        tests:
          - relationships:
              to: ref('base__zendesk__user')
              field: user_id
              config:
                severity: warn

  # - name: base__zendesk__daylight_time
  #   description: >
  #     Appropriate offsets (from UTC) for timezones that engage or have engaged with Daylight Savings at some point since 1970.
  #   tests:
  #     - dbt_utils.unique_combination_of_columns:
  #         combination_of_columns: 
  #           - time_zone
  #           - year    
  #   columns:
  #     - name: daylight_end_utc
  #       description: UTC timestamp of when Daylight Time ended in this year.
  #     - name: daylight_offset
  #       description: Number of **hours** added during Daylight Savings Time. 
  #     - name: daylight_start_utc
  #       description: UTC timestamp of when Daylight Time began in this year.
  #     - name: time_zone
  #       description: Name of the timezone. 
  #     - name: year
  #       description: Year in which daylight savings occurred. 
  #     - name: daylight_offset_minutes
  #       description: Number of **minutes** added during Daylight Savings Time. 

  # - name: base__zendesk__time_zone
  #   description: Offsets (from UTC) for each timezone. 
  #   columns:
  #     - name: time_zone
  #       description: Name of the time zone. 
  #       tests:
  #         - unique
  #         - not_null
  #     - name: standard_offset 
  #       description: Standard offset of the timezone (non-daylight savings hours). In `+/-hh:mm` format.
  #     - name: standard_offset_minutes
  #       description: Standard offset of the timezone (non-daylight savings hours) in minutes.